from flask import Flask, render_template, redirect, url_for, request, session, flash, send_file
cw.writerow([s.id, s.user.username, s.product.name, s.price_at_sale, s.sold_at.isoformat()])
output = si.getvalue().encode('utf-8')
return send_file(
BytesIO(output),
mimetype='text/csv',
as_attachment=True,
download_name=f"reporte_ventas_{datetime.utcnow().date()}.csv"
)


# ----------------- CRUD PRODUCTOS (ADMIN) -----------------
@app.route('/admin/productos')
@login_required
@role_required('admin')
def productos_list():
products = Product.query.order_by(Product.created_at.desc()).all()
return render_template('productos_list.html', products=products)


@app.route('/admin/productos/nuevo', methods=['GET', 'POST'])
@login_required
@role_required('admin')
def producto_nuevo():
if request.method == 'POST':
name = request.form.get('name')
price = float(request.form.get('price', 0))
product = Product(name=name, price=price)
db.session.add(product)
db.session.commit()
flash('Producto creado', 'success')
return redirect(url_for('productos_list'))
return render_template('producto_form.html', action='Crear')


@app.route('/admin/productos/<int:product_id>/editar', methods=['GET', 'POST'])
@login_required
@role_required('admin')
def producto_editar(product_id):
product = Product.query.get_or_404(product_id)
if request.method == 'POST':
product.name = request.form.get('name')
product.price = float(request.form.get('price', 0))
db.session.commit()
flash('Producto actualizado', 'success')
return redirect(url_for('productos_list'))
return render_template('producto_form.html', action='Editar', product=product)


@app.route('/admin/productos/<int:product_id>/eliminar', methods=['POST'])
@login_required
@role_required('admin')
def producto_eliminar(product_id):
product = Product.query.get_or_404(product_id)
db.session.delete(product)
db.session.commit()
flash('Producto eliminado', 'info')
return redirect(url_for('productos_list'))


# ----------------- SEED INICIAL -----------------
@app.cli.command('seed')
def seed():
"""Cargar datos de ejemplo y crear admin: flask seed"""
if not User.query.filter_by(username='admin').first():
admin = User(username='admin', role='admin', password_hash=bcrypt.generate_password_hash('admin123').decode('utf-8'))
db.session.add(admin)
if Product.query.count() == 0:
db.session.add_all([
Product(name='Laptop Pro', price=18000),
Product(name='Smartphone X', price=9500),
Product(name='Aud√≠fonos BT', price=750),
Product(name='Mouse Gamer', price=520),
])
db.session.commit()
print('Seed completado')


if __name__ == '__main__':
with app.app_context():
db.create_all()
app.run(debug=True)
